// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		E84A5B1B1094281600852509 /* VersionX (Generate Info.plist Prefix) */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = E84A5B1E1094283400852509 /* Build configuration list for PBXAggregateTarget "VersionX (Generate Info.plist Prefix)" */;
			buildPhases = (
				E84A5B1A1094281600852509 /* Run Script - VersionX */,
			);
			dependencies = (
			);
			name = "VersionX (Generate Info.plist Prefix)";
			productName = "VersionX (Generate Info.plist Prefix)";
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		1DDD58160DA1D0A300B32029 /* MainMenu.xib in Resources */ = {isa = PBXBuildFile; fileRef = 1DDD58140DA1D0A300B32029 /* MainMenu.xib */; };
		256AC3DA0F4B6AC300CF3369 /* VersionXAppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 256AC3D90F4B6AC300CF3369 /* VersionXAppDelegate.m */; };
		8D11072B0486CEB800E47090 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 089C165CFE840E0CC02AAC07 /* InfoPlist.strings */; };
		8D11072D0486CEB800E47090 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 29B97316FDCFA39411CA2CEA /* main.m */; settings = {ATTRIBUTES = (); }; };
		8D11072F0486CEB800E47090 /* Cocoa.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 1058C7A1FEA54F0111CA2CBB /* Cocoa.framework */; };
		E811F98110A0F67B00C47571 /* VersionXController.m in Sources */ = {isa = PBXBuildFile; fileRef = E811F98010A0F67B00C47571 /* VersionXController.m */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		E84A5B1F1094292800852509 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 29B97313FDCFA39411CA2CEA /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = E84A5B1B1094281600852509;
			remoteInfo = "VersionX (Generate Info.plist Prefix)";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		089C165DFE840E0CC02AAC07 /* English */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.strings; name = English; path = English.lproj/InfoPlist.strings; sourceTree = "<group>"; };
		1058C7A1FEA54F0111CA2CBB /* Cocoa.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Cocoa.framework; path = /System/Library/Frameworks/Cocoa.framework; sourceTree = "<absolute>"; };
		13E42FB307B3F0F600E4EEF1 /* CoreData.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CoreData.framework; path = /System/Library/Frameworks/CoreData.framework; sourceTree = "<absolute>"; };
		1DDD58150DA1D0A300B32029 /* English */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = English; path = English.lproj/MainMenu.xib; sourceTree = "<group>"; };
		256AC3D80F4B6AC300CF3369 /* VersionXAppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = VersionXAppDelegate.h; sourceTree = "<group>"; };
		256AC3D90F4B6AC300CF3369 /* VersionXAppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = VersionXAppDelegate.m; sourceTree = "<group>"; };
		256AC3F00F4B6AF500CF3369 /* VersionX_Prefix.pch */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = VersionX_Prefix.pch; sourceTree = "<group>"; };
		29B97316FDCFA39411CA2CEA /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = main.m; sourceTree = "<group>"; };
		29B97324FDCFA39411CA2CEA /* AppKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = AppKit.framework; path = /System/Library/Frameworks/AppKit.framework; sourceTree = "<absolute>"; };
		29B97325FDCFA39411CA2CEA /* Foundation.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Foundation.framework; path = /System/Library/Frameworks/Foundation.framework; sourceTree = "<absolute>"; };
		8D1107310486CEB800E47090 /* VersionX-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "VersionX-Info.plist"; sourceTree = "<group>"; };
		8D1107320486CEB800E47090 /* VersionX.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = VersionX.app; sourceTree = BUILT_PRODUCTS_DIR; };
		E811F97F10A0F67A00C47571 /* VersionXController.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = VersionXController.h; sourceTree = "<group>"; };
		E811F98010A0F67B00C47571 /* VersionXController.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = VersionXController.m; sourceTree = "<group>"; };
		E84A5B3A10942A8200852509 /* VersionX-revision.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "VersionX-revision.h"; sourceTree = "<group>"; };
		E84A5C0F10944D7800852509 /* VersionX-revision.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = "VersionX-revision.h"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		8D11072E0486CEB800E47090 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8D11072F0486CEB800E47090 /* Cocoa.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		080E96DDFE201D6D7F000001 /* Classes */ = {
			isa = PBXGroup;
			children = (
				256AC3D80F4B6AC300CF3369 /* VersionXAppDelegate.h */,
				256AC3D90F4B6AC300CF3369 /* VersionXAppDelegate.m */,
				E811F97F10A0F67A00C47571 /* VersionXController.h */,
				E811F98010A0F67B00C47571 /* VersionXController.m */,
			);
			name = Classes;
			sourceTree = "<group>";
		};
		1058C7A0FEA54F0111CA2CBB /* Linked Frameworks */ = {
			isa = PBXGroup;
			children = (
				1058C7A1FEA54F0111CA2CBB /* Cocoa.framework */,
			);
			name = "Linked Frameworks";
			sourceTree = "<group>";
		};
		1058C7A2FEA54F0111CA2CBB /* Other Frameworks */ = {
			isa = PBXGroup;
			children = (
				29B97324FDCFA39411CA2CEA /* AppKit.framework */,
				13E42FB307B3F0F600E4EEF1 /* CoreData.framework */,
				29B97325FDCFA39411CA2CEA /* Foundation.framework */,
			);
			name = "Other Frameworks";
			sourceTree = "<group>";
		};
		19C28FACFE9D520D11CA2CBB /* Products */ = {
			isa = PBXGroup;
			children = (
				8D1107320486CEB800E47090 /* VersionX.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		29B97314FDCFA39411CA2CEA /* VersionX */ = {
			isa = PBXGroup;
			children = (
				080E96DDFE201D6D7F000001 /* Classes */,
				29B97315FDCFA39411CA2CEA /* Other Sources */,
				E84A5B3A10942A8200852509 /* VersionX-revision.h */,
				29B97317FDCFA39411CA2CEA /* Resources */,
				29B97323FDCFA39411CA2CEA /* Frameworks */,
				19C28FACFE9D520D11CA2CBB /* Products */,
			);
			name = VersionX;
			sourceTree = "<group>";
		};
		29B97315FDCFA39411CA2CEA /* Other Sources */ = {
			isa = PBXGroup;
			children = (
				E84A5C0F10944D7800852509 /* VersionX-revision.h */,
				256AC3F00F4B6AF500CF3369 /* VersionX_Prefix.pch */,
				29B97316FDCFA39411CA2CEA /* main.m */,
			);
			name = "Other Sources";
			sourceTree = "<group>";
		};
		29B97317FDCFA39411CA2CEA /* Resources */ = {
			isa = PBXGroup;
			children = (
				8D1107310486CEB800E47090 /* VersionX-Info.plist */,
				089C165CFE840E0CC02AAC07 /* InfoPlist.strings */,
				1DDD58140DA1D0A300B32029 /* MainMenu.xib */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
		29B97323FDCFA39411CA2CEA /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				1058C7A0FEA54F0111CA2CBB /* Linked Frameworks */,
				1058C7A2FEA54F0111CA2CBB /* Other Frameworks */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		8D1107260486CEB800E47090 /* VersionX */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C01FCF4A08A954540054247B /* Build configuration list for PBXNativeTarget "VersionX" */;
			buildPhases = (
				8D1107290486CEB800E47090 /* Resources */,
				8D11072C0486CEB800E47090 /* Sources */,
				8D11072E0486CEB800E47090 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				E84A5B201094292800852509 /* PBXTargetDependency */,
			);
			name = VersionX;
			productInstallPath = "$(HOME)/Applications";
			productName = VersionX;
			productReference = 8D1107320486CEB800E47090 /* VersionX.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		29B97313FDCFA39411CA2CEA /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0440;
			};
			buildConfigurationList = C01FCF4E08A954540054247B /* Build configuration list for PBXProject "VersionX" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 1;
			knownRegions = (
				en,
			);
			mainGroup = 29B97314FDCFA39411CA2CEA /* VersionX */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				8D1107260486CEB800E47090 /* VersionX */,
				E84A5B1B1094281600852509 /* VersionX (Generate Info.plist Prefix) */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		8D1107290486CEB800E47090 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8D11072B0486CEB800E47090 /* InfoPlist.strings in Resources */,
				1DDD58160DA1D0A300B32029 /* MainMenu.xib in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		E84A5B1A1094281600852509 /* Run Script - VersionX */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script - VersionX";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#\n# Program: Generate Info.plist Prefix for pre-processing in XCode builds\n#          (part of a demonstration of automatic versioning of Cocoa Apps)\n#\n#\n#\n#\n# sed: delete everything after the last occurance\n# http://unix.derkeiler.com/Newsgroups/comp.unix.shell/2006-02/msg00354.html\n\n#\n# Configuration \n#\nset -x\n\n# Use only the binaries from known, default locations.  \n# (Don't just use whatever some cracker leaves lying about.)\n\nMY_INFO_PLIST=\"${SRCROOT}/${PROJECT_NAME}-Info.plist\"\n\nCAT=/bin/cat\nSED=/usr/bin/sed\nRM=/bin/rm\nPLISTBUDDY=/usr/libexec/PlistBuddy\nAWK=/usr/bin/awk\nPERL=/usr/bin/perl\nTOUCH=/usr/bin/touch\nDATE=/bin/date\nGIT=/usr/local/git/bin/git\nHG=/usr/local/bin/hg\nSVN=/usr/bin/cvs\nCVS=/usr/bin/cvs\nHOSTNAME=\"/bin/hostname -s\"  # short hostname (typically sufficient) remove the -s flag to get hostname.domain\n\n#\n# build_environment\n#\nVERSION_X_BUILD_DATE=\"`${DATE}`\"\nVERSION_X_BUILD_HOST=`${HOSTNAME}`\nVERSION_X_BUILD_USER=${USER}\nVERSION_X_BUILD_STYLE=${BUILD_STYLE}\n\n# use CONFIGURATION if BUILD_STYLE is empty (Xcode 4.4 and higher?)\nif ${BUILD_STYLE-text} ; then\n    # newer versions of Xcode\n    VERSION_X_BUILD_STYLE=${CONFIGURATION}\nelse\n    # older versions of Xcode\n    VERSION_X_BUILD_STYLE=${BUILD_STYLE}\nfi\nVERSION_X_BUILD_STYLE=${CONFIGURATION}\n\n\nVERSION_X_BUILD_ARCHS=${ARCHS}\n\n#\n# Functions\n#\ndie() {\n   local exitcode=\"$1\"\n   local message=\"$2\"\n   echo \"`date` $2\"\n   exit $1\n}\n\n#\n# check to see if we appear to be on a working copy of a commonly used source repository \n#\nwhich_repository() {\n\nWEARE_GIT=0\nWEARE_HG=0\nWEARE_SVN=0\nWEARE_CVS=0\n\n# git gives a specific error if not repository found (128 exit code). \nif [ \"`git status`\" = \"128\" ]; then\n\techo \" *** Git not found.\"\nelse\n    WEARE_GIT=1\n    VERSION_X_REPOSITORY=\"Git\"\n    echo \"*** found .git\"\nfi\nif [ -d \"${SRCROOT}/.hg\" ]; then\n    WEARE_HG=1\n    VERSION_X_REPOSITORY=\"Hg\"\n    echo \"*** found .hg\"\nfi\nif [ -d \"${SRCROOT}/.svn\" ]; then\n    WEARE_SVN=1\n    VERSION_X_REPOSITORY=\"SVN\"\n    echo \"*** found .svn\"\nfi\nif [ -d \"${SRCROOT}/CVS\" ]; then\n    WEARE_CVS=1\n    VERSION_X_REPOSITORY=\"CVS\"\n    echo \"*** found CVS\"\nfi  \n\n# there can be only one\nrcs_count=$(($WEARE_GIT + $WEARE_HG + $WEARE_SVN + $WEARE_CVS))\nif ((\"$rcs_count\" < 1)); then\n    echo \"*** this doesn't appear to be a working copy of a repository, cannot get version info\"\n    return 1\nelif ((\"$rcs_count\" > 1)); then\n    echo \"*** the build directory appears to include control files for more than one repository\"\n    return 1\nelse \n    return 0\nfi\n\n}\n\n#\n# TODO - sanity check for git\n#\ngit_sanity() {\n\n    # is the git binary available and executable?\n    # if we ask a simple question of this archive, do we get a reasonable answer?\n    # $ git status\n    #   fatal: Not a git repository (or any of the parent directories): .git\nreturn 0\n}\n\n\n#\n# git: create the revision file which is compiled into the project\n#\ngit_version_info() {\n    cd \"${PROJECT_DIR}\"\n    VERSION_X_COMMIT_SHORT=\"`$GIT rev-parse --short HEAD`\"\n    VERSION_X_COMMIT_LONG=\"`$GIT rev-parse HEAD`\"\n    VERSION_X_COMMIT_COUNT=\"`$GIT rev-list HEAD | wc -l |$SED -e 's/^ *//'`\"\n    VERSION_X_COMMIT_TAG=\"`$GIT describe`\"\n    ### VERSION_X_BRANCH=\"`${GIT} describe --all --contains ${VERSION_X_COMMIT_SHORT}`\"\n    VERSION_X_BRANCH=\"`${GIT} show-branch --current | ${AWK} '{print $1}'`\"\n    VERSION_X_LONG=\"`$GIT describe | $SED -e 's/\\\\-/\\\\./' -e  's/^v//' -e 's/-.*//'`\"\n    VERSION_X_SHORT=\"`$GIT describe | $SED -e 's/\\\\-/\\\\./' -e  's/^v//' -e 's/-.*//' -e 's/.[^.]*$//'`\"\n}\n\n#\n# git: get lifecycle information (which is encoded in git tag message)\n#\ngit_lifecycle_info() {\n    # grab these from tag message for this commit\n    # tag message format is...\n    #   :Version Family:LifeCycle Stage:LCS: Anything goes...\n    #   :Fluffy Bunny:Alpha:a:\n    #    :Fluffy Bunny:Beta:b:\n    #   :Fluffy Bunny:Release Candidate:RC:\n    #   :Fluffy Bunny:General Availability:GA:\n\n    #  parse the tag's message to get our lifecycle status\n\n    IFS_STORE=${IFS}    # store the current IFS so we can put it back later\n    IFS=$'\\n'       # reset IFS so we can slurp in the array\n#   tagarray=(`${GIT} tag -n -l --contains ${VERSION_X_COMMIT_SHORT}  | awk '{ split($0,a,\":\"); for (i=1; i<=7; i++) print 'a[i]}'' `)\n    if tagarray=(`${GIT} tag -n -l --contains ${VERSION_X_COMMIT_SHORT}  | ${AWK} '{ split($0,a,\":\"); for (i=1; i<=7; i++) print 'a[i]}'' `); then\n\n        IFS=${IFS_STORE}    # put the original IFS value back\n\n        VERSION_X_FAMILY=\"${tagarray[1]}\"\n        VERSION_X_LIFECYCLE_LONG=\"${tagarray[2]}\"\n        VERSION_X_LIFECYCLE_SHORT=\"${tagarray[3]}\"\n\n            if [ \"${VERSION_X_FAMILY}\" = \"\" ]; then\n            echo 'no tag found for commit ${VERSION_X_COMMIT_SHORT}'\n            VERSION_X_FAMILY=\"UNSET\"\n            VERSION_X_LIFECYCLE_LONG=\"UNSET\"\n            VERSION_X_LIFECYCLE_SHORT=\"UNSET\"\n            fi\n    else\n        echo \"received an error while attempting to retrieve or parse the tag message\"\n    fi\n}\n\n#\n# git: check to see if there are uncommitted changes in this working copy\n#\ngit_status() {\n\n# for git, squeeze out all the lines which begin with a #, last line is short status\nVERSION_X_COMMIT_STATUS_SHORT=\"`$GIT status | ${SED} -e '/^\\#/d'`\"\n\nCLEAN=\"nothing to commit (working directory clean)\"\n\nif [ \"${VERSION_X_COMMIT_STATUS_SHORT}\" = \"${CLEAN}\" ]; then\n\n    VERSION_X_COMMIT_STATUS=\"Clean\"\nelse\n    VERSION_X_COMMIT_STATUS=\"Grungy\"\nfi\n\n\n# Before we drop it into the .h file, we need to refilter these strings to quote the double-quote characters\n###\n### WARNING:  That last space between the tick and the back tick, is very important: \n###           `git status | sed -e 's/\\\"/\\\\\\\"/g' `  is not the same as:\n###           `git status | sed -e 's/\\\"/\\\\\\\"/g'`\n###           It seems like it should be, but it's not.  \n###           I discovered that by accident.  Is that evidence for the existence of God?\nVERSION_X_COMMIT_STATUS_SHORT=`$GIT status | ${SED} -e '/^\\#/d' -e 's/\\\"/\\\\\\\"/g' `\nVERSION_X_COMMIT_STATUS_LONG=`$GIT status | ${PERL} -p -e 's/\\s+$/ \\\\\\n/g' | ${SED} -e 's/\\\"/\\\\\\\"/g' `\n}\n\n#\n# increment a build count indicator in version.xcconfig file\n#\n#  NOTE:  On a project with more than one developer,\n#        where more than one person may do a Release build,\n#        this doesn't tell you very much.  \n#        Some developers seem to like it, though.\nbuildcount() {\n\n# if the build count file doesn't exist, create it\n    if ! [ -f \"${SRCROOT}/version.xcconfig\" ]; then\n        echo \"VERSION_X_BUILD_COUNT = 0\" > \"${SRCROOT}/version.xcconfig\"\n    fi\n\n# Don't increment the buildcount unless this is a Release build\n    if [ \"${BUILD_STYLE}\" != \"Release\" ]; then\n        VERSION_X_BUILD_COUNT=\"0\" \n        # return to main script execution and continue\n        return 0\n    fi\n\n# increment the build count\nNEW_COUNT=`${CAT} \"${SRCROOT}/version.xcconfig\" | ${AWK} '/VERSION_X_BUILD_COUNT/ { print $3 + 1 };'` || die 40 \"failed to increment build count file\"\n\n# write the new build count back to the file\n${SED} -i '' \"s/VERSION_X_BUILD_COUNT = .*/VERSION_X_BUILD_COUNT = ${NEW_COUNT}/\" \"${SRCROOT}/version.xcconfig\" || die 41 \"failed to write new build count file\"\n\nVERSION_X_BUILD_COUNT=\"${NEW_COUNT}\" \n${TOUCH} \"${SRCROOT}/version.xcconfig\"\n}\n\n\n#\n# set the keys we need in the Info.plist\n#\n# we should hammer the two keys we need in the Info.plist (for the Finder)\n#     (in case someone cleverly changed our variables into version strings)\n#   \"I have a cunning plan, M'Lord, which cannot fail.\" -- Blackadder\n#\n#   CFBundleVersion         VERSION_X_PP_LONG\n#   CFBundleShortVersionString  VERSION_X_PP_SHORT\n#\nenforce_plist_settings() {\necho \"verifying Info.plist keys...\"\n\n# if key doesn't exist, add the pair\n\n    if ! `${PLISTBUDDY} -c \"Print CFBundleVersion\" ${MY_INFO_PLIST}  > /dev/null 2>&1`; then\n        ${PLISTBUDDY} -c \"Add :CFBundleVersion VERSION_X_PP_LONG\" ${MY_INFO_PLIST}\n    fi\n    \n    if ! `${PLISTBUDDY} -c \"Print CFBundleShortVersionString\" ${MY_INFO_PLIST}  > /dev/null 2>&1`; then\n        ${PLISTBUDDY} -c \"Add :CFBundleShortVersionString VERSION_X_PP_SHORT\" ${MY_INFO_PLIST}\n    fi\n\n# if key exists, but doesn't match, change it\n    # Read the exist key (if any)\n    vers_long=`${PLISTBUDDY} -c \"Print CFBundleVersion\" ${MY_INFO_PLIST}`\n    vers_short=`${PLISTBUDDY} -c \"Print CFBundleShortVersionString\" ${MY_INFO_PLIST}`\n\n    if ! [ \"$vers_long\" = \"VERSION_X_PP_LONG\" ]; then\n        ${PLISTBUDDY} -c \"Set :CFBundleVersion VERSION_X_PP_LONG\" ${MY_INFO_PLIST}\n    fi\n\n    if ! [ \"$vers_short\" = \"VERSION_X_PP_SHORT\" ]; then\n        ${PLISTBUDDY} -c \"Set :CFBundleShortVersionString VERSION_X_PP_SHORT\" ${MY_INFO_PLIST}\n    fi\n\n    touch \"${MY_INFO_PLIST}\"\n    return 0\n}\n\n#\n# create a .h file with macros which will be compiled into the application\n#\ncreate_revision_file_for_compiler() {\necho \"creating ${SRCROOT}/VersionX-revision.h to define macros for the application\"\n$CAT << EOF > \"${SRCROOT}/VersionX-revision.h\"\n/*\n    Generated:  ${VERSION_X_BUILD_DATE}\n    by XCode Build Target:  ${PRODUCT_NAME}\n    Build Style: ${BUILD_STYLE}\n\n                    >>> >>> >>> NOTICE <<< <<< <<<  \n\n                *** Changes made to this file will have no effect.  ***\n        *** There's no point to keeping this file under revision control. ***\n\n    This file is automatically generated at build pre-processor time,\n    by the an XCode Build Target, probably called:  ${PRODUCT_NAME}\n    To effect meaningful changes in these macros, (add new ones, change\n    the way these are generated, and so forth) you can edit the Run Script\n    in that Build Target.  The macros contain build-time status and version \n    information, and are available to your running application if you import \n    this YourAppName-revision.h file.\n\n*/\n#define VERSION_X_REPOSITORY @\"${VERSION_X_REPOSITORY}\"\n#define VERSION_X_COMMIT_SHORT @\"${VERSION_X_COMMIT_SHORT}\"\n#define VERSION_X_COMMIT_LONG @\"${VERSION_X_COMMIT_LONG}\"\n#define VERSION_X_COMMIT_COUNT @\"${VERSION_X_COMMIT_COUNT}\"\n#define VERSION_X_COMMIT_TAG @\"${VERSION_X_COMMIT_TAG}\"\n#define VERSION_X_BRANCH @\"${VERSION_X_BRANCH}\"\n#define VERSION_X_LONG @\"${VERSION_X_LONG}\"\n#define VERSION_X_SHORT @\"${VERSION_X_SHORT}\"\n#define VERSION_X_FAMILY @\"${VERSION_X_FAMILY}\"\n#define VERSION_X_LIFECYCLE_LONG @\"${VERSION_X_LIFECYCLE_LONG}\"\n#define VERSION_X_LIFECYCLE_SHORT @\"${VERSION_X_LIFECYCLE_SHORT}\"\n#define VERSION_X_BUILD_COUNT @\"${VERSION_X_BUILD_COUNT}\"\n#define VERSION_X_BUILD_DATE @\"${VERSION_X_BUILD_DATE}\"\n#define VERSION_X_BUILD_HOST @\"${VERSION_X_BUILD_HOST}\"\n#define VERSION_X_BUILD_USER @\"${VERSION_X_BUILD_USER}\"\n#define VERSION_X_BUILD_STYLE @\"${VERSION_X_BUILD_STYLE}\"\n#define VERSION_X_BUILD_ARCHS @\"${VERSION_X_BUILD_ARCHS}\"\n#define VERSION_X_COMMIT_STATUS @\"${VERSION_X_COMMIT_STATUS}\"\n#define VERSION_X_COMMIT_STATUS_SHORT @\"${VERSION_X_COMMIT_STATUS_SHORT}\"\n#define VERSION_X_COMMIT_STATUS_LONG @\"${VERSION_X_COMMIT_STATUS_LONG}\"\nEOF\n\n${TOUCH} \"${SRCROOT}/VersionX-revision.h\"\n}\n\n#\n# create the revision.h file which is used to pre-process the Info.plist\n#\ncreate_revision_info_file() {\necho \"creating revision info file for preprocessor, which will substitute into the Info.plist...\"\n\n$CAT << EOF > \"${PROJECT_TEMP_DIR}/revision.h\"\n/* This file is automatically generated by \"Generate Info.plist Prefix\" Build Target */\n#define VERSION_X_PP_LONG ${VERSION_X_LONG}\n#define VERSION_X_PP_SHORT ${VERSION_X_SHORT}\nEOF\n\ntouch \"${PROJECT_TEMP_DIR}/revision.h\"\n}\n\n#\n# Main\n#\n\nwhich_repository || die 10 \"Found more than, or less than, one RCS directory: .git, .svn, .hg, CVS\"\n\nif [ ${WEARE_GIT} ]; then\n    echo \"getting version information from git\"\n    git_sanity || die \"*** This project directory doesn't appear to be a valid working copy (git)\"\n    git_version_info || die 20 \"*** Collecting version info from git failed!\"\n    git_lifecycle_info || die 21 \"*** Failed to get lifecycle info from git tag!\"\n    git_status || die 22 \"*** Not able to get the status for git working directory\"\n\nelif [ ${WEARE_HG} ]; then\n    echo \"getting version information from hg\"\n    echo \"ooops, i lied... hg functions not yet implemented.\"\n\nelif [ ${WEARE_SVN} ]; then\n    echo \"getting version information from svn\"\n    echo \"ooops, i lied... svn functions not yet implemented.\"\n\nelif [ ${WEARE_CVS} ]; then\n    echo \"getting version information from cvs\"\n    echo \"ooops, i lied... cvs functions not yet implemented.\"\n\nfi\n\n\n# these steps are independent of RCS system\nbuildcount || die 23 \"*** Incrementing build count failed!\"\nenforce_plist_settings || die 24 \"*** Merging keys into Info.plist failed!\"\ncreate_revision_info_file || die 25 \"*** Creating revision info file failed!\"\ncreate_revision_file_for_compiler || die 26 \"*** Creating revision.h file for compiler failed!\"\n\nexit 0\n\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		8D11072C0486CEB800E47090 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8D11072D0486CEB800E47090 /* main.m in Sources */,
				256AC3DA0F4B6AC300CF3369 /* VersionXAppDelegate.m in Sources */,
				E811F98110A0F67B00C47571 /* VersionXController.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		E84A5B201094292800852509 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = E84A5B1B1094281600852509 /* VersionX (Generate Info.plist Prefix) */;
			targetProxy = E84A5B1F1094292800852509 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		089C165CFE840E0CC02AAC07 /* InfoPlist.strings */ = {
			isa = PBXVariantGroup;
			children = (
				089C165DFE840E0CC02AAC07 /* English */,
			);
			name = InfoPlist.strings;
			sourceTree = "<group>";
		};
		1DDD58140DA1D0A300B32029 /* MainMenu.xib */ = {
			isa = PBXVariantGroup;
			children = (
				1DDD58150DA1D0A300B32029 /* English */,
			);
			name = MainMenu.xib;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		C01FCF4B08A954540054247B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_MODEL_TUNING = G5;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = VersionX_Prefix.pch;
				INFOPLIST_FILE = "VersionX-Info.plist";
				INFOPLIST_PREFIX_HEADER = $PROJECT_TEMP_DIR/revision.h;
				INFOPLIST_PREPROCESS = YES;
				INSTALL_PATH = "$(HOME)/Applications";
				MACOSX_DEPLOYMENT_TARGET = 10.6.8;
				PRODUCT_NAME = VersionX;
			};
			name = Debug;
		};
		C01FCF4C08A954540054247B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_MODEL_TUNING = G5;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = VersionX_Prefix.pch;
				INFOPLIST_FILE = "VersionX-Info.plist";
				INFOPLIST_PREFIX_HEADER = $PROJECT_TEMP_DIR/revision.h;
				INFOPLIST_PREPROCESS = YES;
				INSTALL_PATH = "$(HOME)/Applications";
				MACOSX_DEPLOYMENT_TARGET = 10.6.8;
				PRODUCT_NAME = VersionX;
			};
			name = Release;
		};
		C01FCF4F08A954540054247B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = DEBUG;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_PREFIX_HEADER = $PROJECT_TEMP_DIR/revision.h;
				INFOPLIST_PREPROCESS = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		C01FCF5008A954540054247B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(ARCHS_STANDARD_32_64_BIT)";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_PREPROCESSOR_DEFINITIONS = "";
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_PREFIX_HEADER = $PROJECT_TEMP_DIR/revision.h;
				INFOPLIST_PREPROCESS = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				SDKROOT = macosx;
			};
			name = Release;
		};
		E84A5B1C1094281600852509 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				PRODUCT_NAME = "VersionX (Generate Info.plist Prefix)";
			};
			name = Debug;
		};
		E84A5B1D1094281600852509 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				PRODUCT_NAME = "VersionX (Generate Info.plist Prefix)";
				ZERO_LINK = NO;
			};
			name = Release;
		};
		E84A5B461094312300852509 /* Analyzer */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ARCHS = "$(NATIVE_ARCH_ACTUAL)";
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = DEBUG;
				GCC_WARN_ABOUT_RETURN_TYPE = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_PREFIX_HEADER = $PROJECT_TEMP_DIR/revision.h;
				INFOPLIST_PREPROCESS = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.6;
				ONLY_ACTIVE_ARCH = YES;
				RUN_CLANG_STATIC_ANALYZER = YES;
				SDKROOT = macosx;
			};
			name = Analyzer;
		};
		E84A5B471094312300852509 /* Analyzer */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_MODEL_TUNING = G5;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PRECOMPILE_PREFIX_HEADER = YES;
				GCC_PREFIX_HEADER = VersionX_Prefix.pch;
				INFOPLIST_FILE = "VersionX-Info.plist";
				INFOPLIST_PREFIX_HEADER = $PROJECT_TEMP_DIR/revision.h;
				INFOPLIST_PREPROCESS = YES;
				INSTALL_PATH = "$(HOME)/Applications";
				MACOSX_DEPLOYMENT_TARGET = 10.6.8;
				PRODUCT_NAME = VersionX;
			};
			name = Analyzer;
		};
		E84A5B481094312300852509 /* Analyzer */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_OPTIMIZATION_LEVEL = 0;
				PRODUCT_NAME = "VersionX (Generate Info.plist Prefix)";
			};
			name = Analyzer;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		C01FCF4A08A954540054247B /* Build configuration list for PBXNativeTarget "VersionX" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C01FCF4B08A954540054247B /* Debug */,
				E84A5B471094312300852509 /* Analyzer */,
				C01FCF4C08A954540054247B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		C01FCF4E08A954540054247B /* Build configuration list for PBXProject "VersionX" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C01FCF4F08A954540054247B /* Debug */,
				E84A5B461094312300852509 /* Analyzer */,
				C01FCF5008A954540054247B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		E84A5B1E1094283400852509 /* Build configuration list for PBXAggregateTarget "VersionX (Generate Info.plist Prefix)" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				E84A5B1C1094281600852509 /* Debug */,
				E84A5B481094312300852509 /* Analyzer */,
				E84A5B1D1094281600852509 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 29B97313FDCFA39411CA2CEA /* Project object */;
}
